-- Função para lidar com erros
local function handleError(errorMessage)
    -- Exibir a mensagem de erro na GUI
    if StatusLabel then
        StatusLabel.Text = "Erro: " .. errorMessage
    end
    warn("Erro: " .. errorMessage)
end

-- Verificar e remover GUI anterior, se existir
if game.CoreGui:FindFirstChild("DzHubGUI") then
    game.CoreGui:FindFirstChild("DzHubGUI"):Destroy()
end

-- Criação da GUI
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local StatusLabel = Instance.new("TextLabel")
local ToggleButton = Instance.new("TextButton")

-- Configurar o nome da GUI para facilitar a remoção
ScreenGui.Name = "DzHubGUI"
ScreenGui.Parent = game.CoreGui

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.Position = UDim2.new(0.5, -100, 0.05, 0) -- Centralizado na parte superior
Frame.Size = UDim2.new(0, 200, 0, 100)

Title.Parent = Frame
Title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Title.Size = UDim2.new(0, 200, 0, 50)
Title.Font = Enum.Font.SourceSans
Title.Text = "DzHub"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 24

StatusLabel.Parent = Frame
StatusLabel.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
StatusLabel.Position = UDim2.new(0, 0, 0.5, 0)
StatusLabel.Size = UDim2.new(0, 200, 0, 25)
StatusLabel.Font = Enum.Font.SourceSans
StatusLabel.Text = "AutoFarm parado"
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.TextSize = 20

ToggleButton.Parent = Frame
ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
ToggleButton.Position = UDim2.new(0, 0, 0.75, 0)
ToggleButton.Size = UDim2.new(0, 200, 0, 25)
ToggleButton.Font = Enum.Font.SourceSans
ToggleButton.Text = "Ativar AutoFarm"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.TextSize = 18

-- Variável de controle
local autofarmEnabled = false

-- Função para teleportar com cuidado com animações
local function moveTo(position)
    local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    local activeTracks = humanoid:GetPlayingAnimationTracks()

    for _, track in ipairs(activeTracks) do
        track:Stop()
    end

    humanoidRootPart.CFrame = CFrame.new(position)

    for _, track in ipairs(activeTracks) do
        track:Play()
    end
end

-- Função para coletar a caixa
local function collectBox()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")

    if humanoidRootPart then
        -- Acessar o mapa correto
        local mapName = "1# Map"  -- Nome do mapa que você deseja usar
        for _, map in pairs(workspace:GetChildren()) do
            if map.Name == mapName then
                local meshes = map:FindFirstChild("2 Meshes")
                if meshes then
                    local meshess = meshes:FindFirstChild("Meshess")
                    if meshess then
                        -- Buscar a Handle pelo MeshId
                        local handle = nil
                        for _, obj in pairs(meshess:GetChildren()) do
                            if obj:IsA("MeshPart") and obj.MeshId == "rbxassetid://17173724273" then
                                handle = obj
                                break
                            end
                        end

                        if handle then
                            local proximityPrompt = handle:FindFirstChildOfClass("ProximityPrompt")
                            if proximityPrompt then
                                -- Simular a ativação do ProximityPrompt
                                proximityPrompt.ActionText = "Coletando..."  -- Opcional, para feedback visual
                                local success, errorMessage = pcall(function()
                                    proximityPrompt:InputHoldBegin()  -- Simular a interação com o ProximityPrompt
                                end)
                                if not success then
                                    handleError("Erro ao simular input: " .. errorMessage)
                                    return false
                                end
                                
                                -- Esperar um tempo extra para garantir que a caixa foi pega
                                wait(2) -- Ajuste o tempo conforme necessário

                                -- Equipar a Box
                                local backpack = player.Backpack
                                local tool = backpack:FindFirstChildWhichIsA("Tool")
                                if tool then
                                    local box = backpack:FindFirstChild("Box")
                                    if box and box:IsA("Tool") then
                                        -- Verificar se a Box é o Tool correto pelo nome ou outras propriedades
                                        local success, equipError = pcall(function()
                                            player.Character:WaitForChild("Humanoid"):EquipTool(box)
                                        end)
                                        if not success then
                                            handleError("Erro ao equipar a Box: " .. equipError)
                                        end
                                    else
                                        handleError("Box não encontrada ou não é um Tool")
                                    end
                                else
                                    handleError("Nenhum Tool encontrado no Backpack")
                                end

                                return true
                            else
                                handleError("ProximityPrompt não encontrado na Handle")
                            end
                        else
                            handleError("Handle com o MeshId especificado não encontrado em Meshess")
                        end
                    else
                        handleError("Meshess não encontrado em 2 Meshes")
                    end
                else
                    handleError("2 Meshes não encontrado em " .. mapName)
                end
            end
        end

        handleError("Mapa " .. mapName .. " não encontrado no Workspace")
    else
        handleError("HumanoidRootPart não encontrado")
    end

    return false
end

-- Posições de início e fim
local startPosition = Vector3.new(-1466.601318359375, 252.99972534179688, -596.7843017578125)
local endPosition = Vector3.new(-1535.427978515625, 252.99974060058594, -489.204833984375)

-- Função do loop de autofarm
local function autoFarm()
    while autofarmEnabled do
        -- Atualizar status na GUI
        StatusLabel.Text = "Coletando a caixa..."

        -- Teleporta para pegar a caixa
        moveTo(startPosition)
        wait(1) -- Ajuste conforme necessário

        -- Coletar a caixa
        if collectBox() then
            -- Atualizar status na GUI
            StatusLabel.Text = "Entregando a caixa..."

            -- Teleporta para entregar a caixa
            moveTo(endPosition)
            wait(1) -- Ajuste conforme necessário
        else
            StatusLabel.Text = "Erro ao coletar a caixa"
        end

        -- Tempo entre loops
        wait(2) -- Ajuste conforme necessário
    end
end

-- Função para alternar o estado do autofarm
local function toggleAutoFarm()
    autofarmEnabled = not autofarmEnabled

    if autofarmEnabled then
        StatusLabel.Text = "AutoFarm iniciado"
        ToggleButton.Text = "Desativar AutoFarm"
        autoFarm() -- Iniciar o loop de autofarm
    else
        StatusLabel.Text = "AutoFarm parado"
        ToggleButton.Text = "Ativar AutoFarm"
    end
end

-- Conectar o botão de alternância
ToggleButton.MouseButton1Click:Connect(toggleAutoFarm)

-- Executar o script de remoção do Adonis antes de iniciar o autofarm
loadstring(game:HttpGet("https://raw.githubusercontent.com/Pixeluted/adoniscries/main/Source.lua", true))()
